#Requires -Modules Az.Accounts, Az.ResourceGraph

if(-not (Get-AzContext)) {
    Write-Host "Please authenticate to Azure using 'Connect-AzAccount'"
}

$query = @"
securityresources
| where type == 'microsoft.security/assessments' and name == 'ffff0522-1e88-47fc-8382-2a80ba848f5d'
| extend status = properties.status.code, resourceid = properties.resourceDetails.Id
| where status == 'Unhealthy'
| project resourceid
"@

$vms = Search-AzGraph -Query $query
foreach ($vm in $vms) {
    $vmName = ($vm.resourceid -split '\/')[-1]
    Write-Host "Working on $vmName" -ForegroundColor Green
    $vmStatus = Invoke-AzRestMethod -Path ('{0}/instanceView?api-version=2019-12-01' -f $vm.resourceid) -Method GET |
        Select-Object -ExpandProperty Content | ConvertFrom-Json | Select-Object -ExpandProperty Statuses
    if ($vmStatus.displayStatus -match 'VM running') {
        $res = Invoke-AzRestMethod -Path ('{0}/providers/Microsoft.Security/serverVulnerabilityAssessments/default?api-Version=2015-06-01-preview' -f $vm.resourceid) -Method PUT
        if ($res.StatusCode -notmatch '200|202') {
            Write-Host ($res.Content | ConvertFrom-Json).Error.message -ForegroundColor Red
        }
    } else {
        Write-Host "$vmName is currently stopped. Skipping this one" -ForegroundColor Yellow
    }
}
